#!/bin/sh
#####################################################################
# @(#) Set all iptables
#
# Author: Tats Shibata
# License: http://rewse.jp/license/2011.01.txt
#
# Copyright (c) 2011, Rewse Lab. All rights reserved.
#####################################################################
# {{{ Trap

trap 'my_exit 1' 1 2 3 15

# }}}
# {{{ load_config
load_config() {
  if [ -f /etc/iptables-setall.conf ]; then
    . /etc/iptables-setall.conf
  else
    echo "[ERROR] /etc/iptables-setall.conf is required" 1>&2
    exit 1
  fi

  if [ "$LOCALNETS" == "" ]; then
    echo '[ERROR] $LOCALNETS is required' 1>&2
    exit 1
  fi

  if [ "$IP0" == "" ]; then
    echo '[ERROR] $IP0 is required' 1>&2
    exit 1
  fi
}
# }}}
# {{{ claer_chains
clear_chains() {
  iptables -P INPUT ACCEPT
  iptables -P FORWARD ACCEPT
  iptables -P OUTPUT ACCEPT
  iptables -F
  iptables -X
}
# }}}
# {{{ block_chains
block_chains() {
  iptables -I INPUT -j DROP
  iptables -I OUTPUT -j DROP
  iptables -I FORWARD -j DROP
}
# }}}
# {{{ unblock_chains
unblock_chains() {
  iptables -D INPUT -j DROP
  iptables -D OUTPUT -j DROP
  iptables -D FORWARD -j DROP
}
# }}}
# {{{ init_chains
init_chains() {
  iptables -P INPUT DROP
  iptables -P OUTPUT ACCEPT
  iptables -P FORWARD DROP

  iptables -N IP0_INPUT
  if [ "$IP1" != "" ]; then iptables -N IP1_INPUT; fi

  iptables -N FILTER
  iptables -N CKFILTER

  iptables -N DISGUISED
  iptables -A DISGUISED -j LOG -m limit \
    --log-level notice --log-prefix "iptables: disguised: "
  iptables -A DISGUISED -j DROP

  iptables -N FRAGMENTED
  iptables -A FRAGMENTED -j LOG -m limit \
    --log-level notice --log-prefix "iptables: fragmented: "
  iptables -A FRAGMENTED -j DROP

  iptables -N FILTERED
  iptables -A FILTERED -j LOG -m limit \
    --log-level notice --log-prefix "iptables: filtered: "
  iptables -A FILTERED -j DROP

  iptables -N CKFILTERED
  iptables -A CKFILTERED -j LOG -m limit \
    --log-level notice --log-prefix "iptables: ckfiltered: "
  iptables -A CKFILTERED -j DROP

  iptables -N LIMITED
  iptables -A LIMITED -j LOG -m limit \
    --log-level notice --log-prefix "iptables: ckfiltered: "
  iptables -A LIMITED -j DROP

  iptables -N TERMINATED
  iptables -A TERMINATED -j LOG -m limit \
    --log-level notice --log-prefix "iptables: terminated: "
  iptables -A TERMINATED -j DROP
}
# }}}
# {{{ assign_chains
assign_chains() {
  iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

  iptables -A INPUT -i lo -j ACCEPT
  iptables -A INPUT -p tcp -s $IP0 -j DISGUISED
  if [ "$IP1" != "" ]; then
    iptables -A INPUT -p tcp -s $IP1 -j DISGUISED
  fi

  for LOCALNET in $LOCALNETS; do
    iptables -A INPUT -s $LOCALNET -j ACCEPT
  done

  iptables -A INPUT -s 127.0.0.0/8 -j DISGUISED
  iptables -A INPUT -s 192.168.0.0/16 -j DISGUISED
  iptables -A INPUT -s 172.16.0.0/12 -j DISGUISED
  iptables -A INPUT -s 10.0.0.0/8 -j DISGUISED

  iptables -A INPUT -f -j FRAGMENTED

  iptables -A INPUT -d $IP0 -j IP0_INPUT
  if [ "$IP1" != "" ]; then iptables -A INPUT -d $IP1 -j IP1_INPUT; fi

  # Multicast DNS
  iptables -A INPUT -p udp -d 224.0.0.251 --dport 5353 -j ACCEPT

  # DHCP
  iptables -A INPUT -p udp -d 255.255.255.255 -j ACCEPT

  iptables -A INPUT -j TERMINATED
}
# }}}
# {{{ open_ports
open_ports() {
  INPUT=$1
  NOFILTER_TCPS=$2
  FILTER_TCPS=$3
  USING_UDPS=$4

  for PORT in $NOFILTER_TCPS; do
    iptables -A $INPUT -p tcp --dport $PORT -j ACCEPT \
      -m hashlimit --hashlimit 1/s --hashlimit-burst 60 \
      --hashlimit-mode srcip,dstport --hashlimit-htable-expire 60000 \
      --hashlimit-name tcp_$PORT

    iptables -A $INPUT -p tcp --dport $PORT -j LIMITED
  done

  for PORT in $FILTER_TCPS; do
    iptables -A $INPUT -p tcp --dport $PORT -j FILTER
  done

  for PORT in $USING_UDPS; do
    iptables -A $INPUT -p udp --sport $PORT -j ACCEPT \
      -m hashlimit --hashlimit 1/s --hashlimit-burst 60 \
      --hashlimit-mode srcip,dstport --hashlimit-htable-expire 60000 \
      --hashlimit-name udp_s$PORT

    iptables -A $INPUT -p udp --sport $PORT -j LIMITED

    iptables -A $INPUT -p udp --dport $PORT -j ACCEPT \
      -m hashlimit --hashlimit 1/s --hashlimit-burst 60 \
      --hashlimit-mode srcip,dstport --hashlimit-htable-expire 60000 \
      --hashlimit-name udp_d$PORT

    iptables -A $INPUT -p udp --dport $PORT -j LIMITED
  done

  iptables -A $INPUT -j TERMINATED
}
# }}}
# {{{ get_ck
get_ck() {
  curl -4o /tmp/delegated-apnic-latest \
    "ftp://ftp.apnic.net/pub/apnic/stats/apnic/delegated-apnic-latest"

  if [ $? != 0 ]; then
    echo "[ERROR] Can't download CKFILTER" 1>&2
    my_exit 1
  fi
}
# }}}
# {{{ create_ck
create_ck() {
  if [ ! -f /tmp/delegated-apnic-latest ]; then
    echo "[ERROR] delegated-apnic-latest is not found" 1>&2
  fi

  countryfilter iptables $FILTERED_COUNTRIES < /tmp/delegated-apnic-latest > /tmp/ckfilter.sh
  sed 's!/usr/sbin/iptables!/sbin/iptables!g' /tmp/ckfilter.sh > /tmp/ckfilter.sh.new
  mv -f /tmp/ckfilter.sh.new /tmp/ckfilter.sh
  sh /tmp/ckfilter.sh
  rm -f /tmp/delegated-apnic-latest /tmp/ckfilter.sh
}
#}}}
# {{{ create_filter
create_filter() {
  for FILTERED_IP in $FILTERED_IPS; do
    iptables -A FILTER -s $FILTERED_IP -j FILTERED
  done

  create_ck

  iptables -A FILTER -j CKFILTER

  iptables -A CKFILTER -j ACCEPT \
    -m hashlimit --hashlimit 12/m --hashlimit-burst 12 \
    --hashlimit-mode srcip,dstport --hashlimit-htable-expire 60000 \
    --hashlimit-name tcp_others

  iptables -A CKFILTER -j LIMITED
}
# }}}
# {{{ my_exit
my_exit() {
  unblock_chains
  exit $1
}
# }}}
# {{{ Main

case "$1" in
  --clear | -c)
    clear_chains
    ;;
  "")
    load_config
    get_ck
    clear_chains
    block_chains
    init_chains
    assign_chains
    create_filter
    open_ports IP0_INPUT "$IP0_NOFILTER_TCPS" "$IP0_FILTER_TCPS" \
      "$IP0_USING_UDPS"
    if [ "$IP1" != "" ]; then
      open_ports IP1_INPUT "$IP1_NOFILTER_TCPS" "$IP1_FILTER_TCPS" \
        "$IP1_USING_UDPS"
    fi
    unblock_chains
    ;;
  *)
    echo "[USAGE] iptables-setall [--clear]" 1>&2
    exit 1
    ;;
esac

service iptables save

iptables -L -Z -n -v

# }}}
